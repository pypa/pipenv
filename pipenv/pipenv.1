.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PIPENV" "1" "Feb 18, 2023" "2023.2.18" "pipenv"
.sp
Pipenv uses a set of commands to manage your Project\(aqs dependencies and custom scripts.
It replaces the use of \fBMakefile\fP, direct calls to \fBpip\fP and \fBpython \-m venv\fP or \fBvirtualenv\fP\&.
to create virtual environments and install packages in them.
Pipenv uses two files to do this: \fBPipfile\fP  and \fBPipfile.lock\fP (which will look familiar if you
are used to packages manager like \fByarn\fP or \fBnpm\fP).
.sp
The main commands are:
.INDENT 0.0
.IP \(bu 2
\fBinstall\fP \-
.sp
Will create a virtual env and install dependencies (if it does not exist already)
The dependencies will be installed inside.
.IP \(bu 2
\fBinstall package==0.2\fP \-
.sp
Will add the package in version 0.2 to the virtual environment and
to \fBPipfile\fP and \fBPipfile.lock\fP
.IP \(bu 2
\fBuninstall\fP \- Will remove the dependency
.IP \(bu 2
\fBlock\fP \- Regenerate \fBPipfile.lock\fP and updates the dependencies inside it.
.UNINDENT
.sp
These are intended to replace \fB$ pip install\fP usage, as well as manual virtualenv management.
.INDENT 0.0
.IP \(bu 2
\fBgraph\fP will show you a dependency graph of your installed dependencies.
.IP \(bu 2
\fBshell\fP will spawn a shell with the virtualenv activated. This shell can be deactivated by using \fBexit\fP\&.
.IP \(bu 2
\fBrun\fP will run a given command from the virtualenv, with any arguments forwarded (e.g. \fB$ pipenv run python\fP or \fB$ pipenv run pip freeze\fP).
.IP \(bu 2
\fBcheck\fP checks for security vulnerabilities and asserts that \fI\%PEP 508\fP requirements are being met by the current environment.
.UNINDENT
.SH AUTHOR
Python Packaging Authority
.SH COPYRIGHT
2020. A project founded by Kenneth Reitz and maintained by <a href="https://www.pypa.io/en/latest/">Python Packaging Authority (PyPA).</a>
.\" Generated by docutils manpage writer.
.
