steps:
- task: UsePythonVersion@0
  displayName: Use Python $(python.version)
  inputs:
    versionSpec: '$(python.version)'
    architecture: '$(python.architecture)'
    addToPath: true

- script: |
      echo '##vso[task.setvariable variable=PIPENV_DEFAULT_PYTHON_VERSION]$(python.version)'

- template: ../steps/install-dependencies.yml

- template: ../steps/create-virtualenv-linux.yml

- script: |
    # Fix Git SSL errors
    export GIT_SSL_CAINFO="$(python -m certifi)"
    export LANG="C.UTF-8"
    export PIP_PROCESS_DEPENDENCY_LINKS="1"
    git submodule sync && git submodule update --init --recursive
    pipenv run pytest --junitxml=test-results.xml
  displayName: Run integration tests

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testResultsFiles: '**/test-results.xml'
    testRunTitle: 'Python $(python.version)'
  condition: succeededOrFailed()
