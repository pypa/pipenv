diff --git a/pipenv/patched/pip/_internal/index/collector.py b/pipenv/patched/pip/_internal/index/collector.py
index e6e9469af..fe8b8c19d 100644
--- a/pipenv/patched/pip/_internal/index/collector.py
+++ b/pipenv/patched/pip/_internal/index/collector.py
@@ -518,9 +518,11 @@ class LinkCollector:
         self,
         session: PipSession,
         search_scope: SearchScope,
+        index_lookup: Optional[Dict[str, List[str]]] = None,
     ) -> None:
         self.search_scope = search_scope
         self.session = session
+        self.index_lookup = index_lookup if index_lookup else {}

     @classmethod
     def create(
@@ -528,6 +530,7 @@ class LinkCollector:
         session: PipSession,
         options: Values,
         suppress_no_index: bool = False,
+        index_lookup: Optional[Dict[str, List[str]]] = None,
     ) -> "LinkCollector":
         """
         :param session: The Session to use to make requests.
@@ -546,12 +549,10 @@ class LinkCollector:
         find_links = options.find_links or []

         search_scope = SearchScope.create(
-            find_links=find_links,
-            index_urls=index_urls,
+            find_links=find_links, index_urls=index_urls, index_lookup=index_lookup
         )
         link_collector = LinkCollector(
-            session=session,
-            search_scope=search_scope,
+            session=session, search_scope=search_scope, index_lookup=index_lookup
         )
         return link_collector

diff --git a/pipenv/patched/pip/_internal/models/search_scope.py b/pipenv/patched/pip/_internal/models/search_scope.py
index e4e54c2f4..8cf4f1e6e 100644
--- a/pipenv/patched/pip/_internal/models/search_scope.py
+++ b/pipenv/patched/pip/_internal/models/search_scope.py
@@ -20,13 +20,14 @@ class SearchScope:
     Encapsulates the locations that pip is configured to search.
     """

-    __slots__ = ["find_links", "index_urls"]
+    __slots__ = ["find_links", "index_urls", "index_lookup"]

     @classmethod
     def create(
         cls,
         find_links: List[str],
         index_urls: List[str],
+        index_lookup: Optional[Dict[str, List[str]]] = None,
     ) -> "SearchScope":
         """
         Create a SearchScope object after normalizing the `find_links`.
@@ -60,15 +61,18 @@ class SearchScope:
         return cls(
             find_links=built_find_links,
             index_urls=index_urls,
+            index_lookup=index_lookup
         )

     def __init__(
         self,
         find_links: List[str],
         index_urls: List[str],
+        index_lookup: Optional[Dict[str, List[str]]] = None,
     ) -> None:
         self.find_links = find_links
         self.index_urls = index_urls
+        self.index_lookup = index_lookup if index_lookup else {}

     def get_formatted_locations(self) -> str:
         lines = []
@@ -126,4 +130,7 @@ class SearchScope:
                 loc = loc + "/"
             return loc

-        return [mkurl_pypi_url(url) for url in self.index_urls]
+        index_urls = self.index_urls
+        if project_name in self.index_lookup:
+            index_urls = [self.index_lookup[project_name]]
+        return [mkurl_pypi_url(url) for url in index_urls]
