diff --git a/pipenv/patched/pip/__main__.py b/pipenv/patched/pip/__main__.py
index 204a8ca2..546caab1 100644
--- a/pipenv/patched/pip/__main__.py
+++ b/pipenv/patched/pip/__main__.py
@@ -26,6 +26,7 @@ if __name__ == "__main__":
     warnings.filterwarnings(
         "ignore", category=DeprecationWarning, module=".*packaging\\.version"
     )
+    sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__)))))
     from pipenv.patched.pip._internal.cli.main import main as _main

     sys.exit(_main())
diff --git a/pipenv/patched/pip/_internal/resolution/resolvelib/candidates.py b/pipenv/patched/pip/_internal/resolution/resolvelib/candidates.py
index 0ba06c52..6fdb59b7 100644
--- a/pipenv/patched/pip/_internal/resolution/resolvelib/candidates.py
+++ b/pipenv/patched/pip/_internal/resolution/resolvelib/candidates.py
@@ -2,6 +2,7 @@ import logging
 import sys
 from typing import TYPE_CHECKING, Any, FrozenSet, Iterable, Optional, Tuple, Union, cast

+from pipenv.patched.pip._vendor.packaging.specifiers import SpecifierSet
 from pipenv.patched.pip._vendor.packaging.utils import NormalizedName, canonicalize_name
 from pipenv.patched.pip._vendor.packaging.version import Version

@@ -253,7 +253,10 @@ class _InstallRequirementBackedCandidate(Candidate):
        yield self._factory.make_requires_python_requirement(self.dist.requires_python)

     def get_install_requirement(self) -> Optional[InstallRequirement]:
-        return self._ireq
+        ireq = self._ireq
+        if self._version and ireq.req and not ireq.req.url:
+            ireq.req.specifier = SpecifierSet(f"=={self._version}")
+        return ireq


 class LinkCandidate(_InstallRequirementBackedCandidate):
